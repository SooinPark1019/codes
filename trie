#include <bits/stdc++.h>

using namespace std;

int root=1;
int unused=2;
const int MX=10000*500+5;
int check[MX]={};
int nxt[MX][30]={};

int lowercasetoint(char a){
    return a-'a';
}

void insert(string& s){
    int cur=root;
    for(int i=0; i<(int)s.length(); i++){
        if(nxt[cur][lowercasetoint(s[i])]==0){
            nxt[cur][lowercasetoint(s[i])]=unused;
            unused++;
        }
        cur=nxt[cur][lowercasetoint(s[i])];
    }
    check[cur]=1;
}

bool findstring(string& s){
    int cur=root;
    for(int i=0; i<(int)s.length(); i++){
        if(nxt[cur][lowercasetoint(s[i])]==0)
            return false;
        cur=nxt[cur][lowercasetoint(s[i])];
    }
    return check[cur];
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int N, M;
    cin >> N >> M;

    for(int i=0; i<N; i++){
        string s;
        cin >> s;
        insert(s);
    }
    int ans=0;
    for(int i=0; i<M; i++){
        string s;
        cin >> s;
        if(findstring(s)) ans++;
    }
    cout << ans;

    return 0;
}
메모리가 부족한 경우
struct Trie {
    bool finish; // 끝나는 지점을 표시해줌
    Trie* next[26]; // 26가지 알파벳에 대한 트라이

    // 생성자
    Trie() : finish(false) {
        memset(next, 0, sizeof(next));
    }

    // 소멸자
    ~Trie() {
        for (int i = 0; i < 26; i++)
            if (next[i])
                delete next[i];
    }

    // 트라이에 문자열 삽입
    void insert(const char* key) {
        if (*key == '\0')
            finish = true; // 문자열이 끝나는 지점일 경우 표시
        else {
            int curr = *key - 'A';
            if (next[curr] == NULL)
                next[curr] = new Trie(); // 탐색이 처음되는 지점일 경우 동적할당
            next[curr]->insert(key + 1); // 다음 문자 삽입
        }
    }

    // 트라이에서 문자열 찾기
    Trie* find(const char* key) {
        if (*key == '\0') return this; // 문자열이 끝나는 위치를 반환
        int curr = *key - 'A';
        if (next[curr] == NULL) return NULL; // 찾는 값이 존재하지 않음
        return next[curr]->find(key + 1); // 다음 문자를 탐색
    }
};
출처: https://eun-jeong.tistory.com/29 [흔들리며 피는 꽃:티스토리]
출처: https://eun-jeong.tistory.com/29 [흔들리며 피는 꽃:티스토리]
